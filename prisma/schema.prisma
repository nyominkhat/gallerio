// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name       String?
  username   String?  @unique
  hashedPassword String?
  email          String?   @unique
  emailVerified  DateTime?

  coverPic String?
  image    String?
  accounts Account[]
  sessions Session[]

  file Image[]
  likeImages Like[]

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Image {
  id  String  @id @default(cuid())
  url String
  tag String?
  description String?

  userId String
  user      User     @relation(fields: [userId], references: [id] , onDelete:  Cascade)

  likeBy Like[]

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}


model Like {
  id  String  @id @default(cuid())
  userId     String  
  user       User     @relation(fields: [userId], references: [id] , onDelete: Cascade)

  imageId    String
  image      Image   @relation(fields: [imageId], references: [id], onDelete: Cascade)

  isLiked    Boolean @default(false)

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt 

  @@unique([userId, imageId])
}